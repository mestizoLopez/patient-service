spring:
  application:
    name: patients-service

  profiles:
    active: dev

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:5432/emr_patients
    username: ${DB_USERNAME:emr_user}
    password: ${DB_PASSWORD:emr_password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
    open-in-view: false

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/emr}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8080/realms/emr/protocol/openid-connect/certs}

  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10 minutes

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:emr_redis_password}
      database: 0
      timeout: 2000ms

keycloak:
  realm: emr
  auth-server-url: http://localhost:8080
  client-id: patients-service
  client-secret: 1v1uFTKuqtncqSRtltQrIyKgVDnMBn7h

server:
  port: 8180
  servlet:
    context-path: /
  compression:
    enabled: true

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
    enabled: ${EUREKA_ENABLED:true}
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  level:
    com.cappymerida.patients: ${LOG_LEVEL:DEBUG}
    org.springframework.security: ${SECURITY_LOG_LEVEL:DEBUG}
    org.springframework.security.oauth2: DEBUG
    org.hibernate.SQL: ${SQL_LOG_LEVEL:DEBUG}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  show-actuator: true